# .github/workflows/autopost.yml  (rebase 경고 제거용 stash 추가)
name: run
on:
  workflow_dispatch:
  schedule:
    - cron: "30 0 * * *"

permissions:
  contents: write

env:
  K_ALL: "50"
  GOLD_ALL: "20"

jobs:
  run:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Write .env from secrets
        run: |
          cat > .env << 'EOF'
          # ... (생략: 기존과 동일, AD_SHORTCODE=[ads_top] 유지)
          EOF
          python - << 'PY'
          import os
          from dotenv import dotenv_values
          env=dotenv_values(".env")
          with open(os.environ["GITHUB_ENV"],"a",encoding="utf-8") as f:
              for k,v in env.items():
                  if v is None: continue
                  f.write(f"{k}<<__EOF__\n{v}\n__EOF__\n")
          PY

      - name: Check Coupang keys
        run: |
          if [ -n "$COUPANG_ACCESS_KEY" ] && [ -n "$COUPANG_SECRET_KEY" ]; then
            echo "[OK] Coupang keys are set."
          else
            echo "[WARN] COUPANG_ACCESS_KEY/SECRET_KEY empty -> fallback 모드"
          fi

      - name: Update keywords
        env:
          K_ALL: ${{ env.K_ALL }}
          GOLD_ALL: ${{ env.GOLD_ALL }}
        run: |
          python update_keywords.py --k "$K_ALL" --gold "$GOLD_ALL" --shop-k "$K_ALL" --shop-gold "$GOLD_ALL" --days 7 --parallel 8 || true
          echo "== golden_shopping_keywords.csv ==" && head -n 5 golden_shopping_keywords.csv || true
          echo "== keywords_shopping.csv ==" && head -n 5 keywords_shopping.csv || true
          echo "== keywords_general.csv ==" && head -n 5 keywords_general.csv || true

    - name: Build product seeds (safe even without Coupang/API)
      run: |
        # 이 스텝만 -e 완화해서 빈 명령/비정상 종료가 전체 잡을 끊지 않게 함
        set +e

        # 파일명/스위치 안전 기본값
        : "${PRODUCTS_SEED_CSV:=products_seed.csv}"
        : "${REQUIRE_COUPANG_API:=1}"

        # 소문자 정규화
        v="$(printf '%s' "$REQUIRE_COUPANG_API" | tr '[:upper:]' '[:lower:]')"

        if [ -f build_products_seed.py ]; then
          if [[ "$v" =~ ^(1|true|yes|y|on)$ ]] && [ -n "${COUPANG_ACCESS_KEY:-}" ] && [ -n "${COUPANG_SECRET_KEY:-}" ]; then
            # API 키가 있을 때만 실제 검색
            python build_products_seed.py || echo "[build_products_seed] WARN: non-zero exit (ignored)"
          else
            echo "[build_products_seed] SKIP: no API keys or REQUIRE_COUPANG_API=off"
          fi
        else
          echo "[build_products_seed] SKIP: build_products_seed.py not found"
        fi

        # 비어있으면 헤더만이라도 만들어 다음 스텝이 안전하게 동작
        if [ ! -s "$PRODUCTS_SEED_CSV" ]; then
          printf "product_name,raw_url,pros,cons,keyword,title,url,image\n" > "$PRODUCTS_SEED_CSV" || true
        fi

      - name: Ensure usage dir
        run: |
          mkdir -p .usage
          [ -f .usage/.gitkeep ] || touch .usage/.gitkeep

      - name: Post daily articles (general)
        run: python auto_wp_gpt.py --mode=two-posts

      - name: Post affiliate articles (3 slots)
        run: |
          set -o pipefail
          IFS=',' read -r -a TIMES <<< "$AFFILIATE_TIMES_KST"
          for t in "${TIMES[@]}"; do
            echo "[AFFILIATE] slot=$t"
            AFFILIATE_TIME_KST="$t" python affiliate_post.py 2>&1 | tee -a /tmp/affiliate_out.txt || true
          done
          echo "---- Affiliate tail ----"; tail -n 200 /tmp/affiliate_out.txt || true
          echo "---- used_shopping tail ----"; tail -n 50 .usage/used_shopping.txt || true

      - name: Commit rotated keywords & logs
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A || true
          git stash --include-untracked --quiet || true
          git pull --rebase origin "${GITHUB_REF_NAME:-main}" || true
          git stash pop --quiet || true
          git add -f golden_shopping_keywords.csv keywords_shopping.csv || true
          git add -f .usage/used_shopping.txt .usage/used_general.txt .usage/.gitkeep || true
          if git diff --cached --quiet; then
            echo "[INFO] nothing to commit"
          else
            git commit -m "chore: rotate keywords & persist usage logs (auto)"
            git push
          fi
