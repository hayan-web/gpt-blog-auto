name: Auto Post to WordPress

on:
  schedule:
    - cron: "*/15 * * * *"   # 15분마다 깨어나서 시각 확인 후 필요한 때만 실행
  workflow_dispatch: {}

concurrency:
  group: autopost
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Should run now? (UTC→KST 가드)
        id: gate
        shell: bash
        run: |
          H=$(date -u +%H)
          M=$(date -u +%M)
          # KST=UTC+9 → KST 10:00/17:00 == UTC 01:00/08:00
          if { [ "$H" = "01" ] || [ "$H" = "08" ]; } && [ "$M" = "00" ]; then
            echo "run=true" >> "$GITHUB_OUTPUT"
            echo "✅ Will run (UTC $H:$M, matches KST schedule)"
          else
            echo "run=false" >> "$GITHUB_OUTPUT"
            echo "⏭️ Skip (UTC $H:$M)"
          fi

      - name: Checkout
        if: steps.gate.outputs.run == 'true'
        uses: actions/checkout@v4

      - name: Set up Python
        if: steps.gate.outputs.run == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        if: steps.gate.outputs.run == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Check required secrets
        if: steps.gate.outputs.run == 'true'
        run: |
          test -n "${{ secrets.WP_URL }}" || (echo "WP_URL missing" && exit 1)
          test -n "${{ secrets.WP_USER }}" || (echo "WP_USER missing" && exit 1)
          test -n "${{ secrets.WP_APP_PASSWORD }}" || (echo "WP_APP_PASSWORD missing" && exit 1)
          test -n "${{ secrets.OPENAI_API_KEY }}" || (echo "OPENAI_API_KEY missing" && exit 1)
          test -n "${{ secrets.OPENAI_MODEL }}" || (echo "OPENAI_MODEL missing" && exit 1)

      - name: Create .env from Secrets
        if: steps.gate.outputs.run == 'true'
        run: |
          cat > .env << 'EOF'
          WP_URL=${{ secrets.WP_URL }}
          WP_USER=${{ secrets.WP_USER }}
          WP_APP_PASSWORD=${{ secrets.WP_APP_PASSWORD }}
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          OPENAI_MODEL=${{ secrets.OPENAI_MODEL }}
          POST_STATUS=${{ secrets.POST_STATUS }}
          KEYWORDS_CSV=keywords.csv
          SCHEDULE_KST_HOUR=9
          TAGS=${{ secrets.TAGS }}
          EXISTING_CATEGORIES=뉴스,비공개,쇼핑,전체글,게시글,정보,취미
          ALLOW_CREATE_TERMS=false
          AD_METHOD=${{ secrets.AD_METHOD }}
          AD_SHORTCODE=${{ secrets.AD_SHORTCODE }}
          AD_INSERT_MIDDLE=${{ secrets.AD_INSERT_MIDDLE }}
          NUM_IMAGES=3
          IMAGE_SIZE=1024x1024
          IMAGE_QUALITY_WEBP=82
          NAVER_CLIENT_ID=${{ secrets.NAVER_CLIENT_ID }}
          NAVER_CLIENT_SECRET=${{ secrets.NAVER_CLIENT_SECRET }}
          NEWSAPI_KEY=${{ secrets.NEWSAPI_KEY }}
          EOF

      - name: Update keywords
        if: steps.gate.outputs.run == 'true'
        run: python update_keywords.py

      - name: Show auto_wp_gpt.py head/tail
        if: steps.gate.outputs.run == 'true'
        run: |
          echo "===== head(auto_wp_gpt.py) ====="
          sed -n '1,80p' auto_wp_gpt.py || true
          echo "===== tail(auto_wp_gpt.py) ====="
          tail -n 60 auto_wp_gpt.py || true

      - name: Verbose run auto_wp_gpt.py
        if: steps.gate.outputs.run == 'true'
        run: |
          python - <<'PY'
          import os, runpy, sys
          print("[DBG] Python", sys.version)
          print("[DBG] CWD", os.getcwd())
          print("[DBG] Env sanity:", {k:bool(os.getenv(k)) for k in ["WP_URL","WP_USER","WP_APP_PASSWORD","OPENAI_API_KEY","OPENAI_MODEL"]})
          try:
              runpy.run_path("auto_wp_gpt.py", run_name="__main__")
              print("[DBG] auto_wp_gpt.py finished with exit 0")
          except SystemExit as e:
              print("[DBG] SystemExit:", e.code); raise
          except Exception as e:
              print("[DBG] Exception:", repr(e)); raise
          PY

      - name: Rotate keywords
        if: steps.gate.outputs.run == 'true'
        run: python rotate_keywords.py
